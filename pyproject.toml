[tool.poetry]
name = "experiment-tracking-clearml"
version = "0.0.1"
description = "Example package for the ClearML experiment tracking"
authors = ["Roman Kryvokhyzha <kriwohizha@gmail.com>"]
keywords = ["ClearML", "Experiment Tracking"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"

numpy = {version = "^1.23.5", optional = false}
pandas = {version = "^2.0.0", optional = false}
joblib = {version = "^1.3.2", optional = false}
matplotlib = {version = ">=3.2, <=3.7.3", optional = false}
seaborn = {version = "^0.12.2", optional = false}
plotly = {version = "^5.15.0", optional = false}
phik = {version = "^0.12.3", optional = false}
optuna = {version = "^3.2.0", optional = false}
scikit-learn = {version = "^1.3.0", optional = false}
imbalanced-learn = {version = "^0.11.0", optional = false}
lightgbm = {version = "^4.0.0", optional = false}
xgboost = {version = "^1.7.6", optional = false}
catboost = {version = "^1.2", optional = false}
clearml = {version = "^1.13.2", optional = false}
clearml-agent = {version = "^1.6.1", optional = false}

[tool.poetry.extras]
all = [
    # basic deps
    "numpy", "pandas", "joblib", "matplotlib", "seaborn", "plotly",
    "phik", "optuna", "scikit-learn",
    "imbalanced-learn", "lightgbm", "xgboost", "catboost", "clearml",
]
basic = [
    # basic deps
    "numpy", "pandas", "joblib", "matplotlib", "seaborn", "plotly",
    "phik", "optuna", "scikit-learn",
    "imbalanced-learn", "lightgbm", "xgboost", "catboost", "clearml",
]

[tool.poetry.dev-dependencies]
pre-commit = "^3.4.0"

[tool.black]
line-length = 120
preview = true
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.hg
  | \.mypy_cache
  | \.vscode
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | configs
  | .gitlab
  | dist
)/
'''

[tool.ruff]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = ["E", "F", "W", "I", "D"]

# max line length for black
line-length = 120

ignore=[
    # space before : (needed for how black formats slicing)
    "E203",
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
    # unable to detect undefined names
    "F403",
    # imported but unused
    "F401",
    # missing docstring in public module
    "D100",
    # missing docstring in public class
    "D101",
    # missing docstring in public method
    "D102",
    # missing docstring in public function
    "D103",
    # missing docstring in public package
    "D104",
    # missing docstring in magic method
    "D105",
    # missing docstring in `__init__`
    "D107",
]

exclude=[
    ".git",
    "__pycache__",
    "dist",
    ".gitlab",
    "configs",
    "build",
]

[tool.ruff.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"scripts/*"=["E402"]

[tool.ruff.isort]
# Use a single line after each import block.
lines-after-imports = 2

[tool.nbqa.config]
black = "pyproject.toml"
ruff = "pyproject.toml"

[tool.nbqa.addopts]
ruff = ["--extend-ignore=E402"]

[tool.nbqa.mutate]
black = 1
ruff = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
